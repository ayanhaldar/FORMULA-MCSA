# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 2021 replay file
# Internal Version: 2020_03_06-14.50.37 167380
# Run by Ayan.Haldar on Sat Apr  6 17:27:58 2024
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=119.91145324707, 
    height=186.977783203125)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
openMdb('bistable-flap.cae')
#: The model database "C:\temp\flap\bistable-flap.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-2'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].setValues(displayedObject=None)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.627845, 
    farPlane=1.14859, width=0.703214, height=0.317649, viewOffsetX=0.0391794, 
    viewOffsetY=-0.0201581)
p = mdb.models['Model-2'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.620358, 
    farPlane=1.15608, width=0.78636, height=0.355207, viewOffsetX=0.0670538, 
    viewOffsetY=-0.0272349)
a = mdb.models['Model-2'].rootAssembly
a.InstanceFromBooleanMerge(name='Part-5', instances=(a.instances['Part-4-1'], 
    a.instances['Part-3-1'], a.instances['Part-1-1'], a.instances['Part-2-1'], 
    ), originalInstances=SUPPRESS, domain=GEOMETRY)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-2'].parts['Part-5']
e = p.edges
p.Round(radius=0.001, edgeList=(e[1], e[3], e[6], e[9]))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.640193, 
    farPlane=1.13624, width=0.566729, height=0.255997, viewOffsetX=-0.00867832, 
    viewOffsetY=-9.16272e-05)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.719813, 
    farPlane=1.08454, width=0.637213, height=0.287836, cameraPosition=(
    0.0479666, 0.0683112, 0.77739), cameraUpVector=(-0.0789063, 0.932765, 
    -0.351743), cameraTarget=(0.0632455, 0.0521785, -0.11055), 
    viewOffsetX=-0.00975764, viewOffsetY=-0.000103023)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.641782, 
    farPlane=1.15711, width=0.568136, height=0.256633, cameraPosition=(
    -0.469884, 0.177494, 0.600803), cameraUpVector=(0.208881, 0.883756, 
    -0.418741), cameraTarget=(0.0529881, 0.0538059, -0.106471), 
    viewOffsetX=-0.00869986, viewOffsetY=-9.18548e-05)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.685637, 
    farPlane=1.11325, width=0.165518, height=0.074766, viewOffsetX=-0.0444622, 
    viewOffsetY=0.00711237)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.698379, 
    farPlane=1.05833, width=0.168594, height=0.0761555, cameraPosition=(
    -0.0832971, 0.44966, 0.654514), cameraUpVector=(0.356422, 0.658933, 
    -0.662398), cameraTarget=(0.062179, 0.0410829, -0.120619), 
    viewOffsetX=-0.0452886, viewOffsetY=0.00724455)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.661353, 
    farPlane=1.09535, width=0.587858, height=0.265542, 
    viewOffsetX=-0.000649609, viewOffsetY=0.0152124)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.639473, 
    farPlane=1.13799, width=0.568409, height=0.256756, cameraPosition=(
    0.467208, 0.317116, 0.619144), cameraUpVector=(-0.0999261, 0.768836, 
    -0.63159), cameraTarget=(0.0613632, 0.0412665, -0.121212), 
    viewOffsetX=-0.000628117, viewOffsetY=0.0147091)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.64023, 
    farPlane=1.13569, width=0.569082, height=0.25706, cameraPosition=(0.481128, 
    0.518645, 0.506657), cameraUpVector=(-0.287692, 0.604753, -0.742635), 
    cameraTarget=(0.0653461, 0.0433725, -0.11798), viewOffsetX=-0.000628861, 
    viewOffsetY=0.0147265)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.644276, 
    farPlane=1.13057, width=0.572678, height=0.258684, cameraPosition=(
    0.413208, 0.401279, 0.612801), cameraUpVector=(-0.2133, 0.72338, 
    -0.656677), cameraTarget=(0.0643353, 0.0418366, -0.120697), 
    viewOffsetX=-0.000632835, viewOffsetY=0.0148196)
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.693807, 
    farPlane=1.08103, width=0.0451159, height=0.0203793, viewOffsetX=0.130375, 
    viewOffsetY=-0.00130235)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.862438, 
    farPlane=1.21231, width=0.0560814, height=0.0253325, cameraPosition=(
    1.05157, 0.299898, 0.0264532), cameraUpVector=(-0.434725, 0.693436, 
    -0.574595), cameraTarget=(0.185225, 0.119808, -0.0507014), 
    viewOffsetX=0.162063, viewOffsetY=-0.00161889)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.851525, 
    farPlane=1.22323, width=0.170033, height=0.0768056, viewOffsetX=0.179893, 
    viewOffsetY=0.000850078)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.89615, 
    farPlane=1.32736, width=0.178944, height=0.0808307, cameraPosition=(
    1.06569, 0.153736, -0.588127), cameraUpVector=(-0.516212, 0.856405, 
    -0.00982425), cameraTarget=(0.309404, 0.0487966, -0.134299), 
    viewOffsetX=0.189321, viewOffsetY=0.000894628)
#: 
#: Point 1: 199.707E-03, 0., -293.E-06  Point 2: 199.707E-03, 0., -249.707E-03
#:    Distance: 249.414E-03  Components: 0., 0., -249.414E-03
#: 
#: Point 1: 200.E-03, 0., -249.E-03  Point 2: 199.E-03, 0., -250.E-03
#:    Distance: 1.414E-03  Components: -1.E-03, 0., -1.E-03
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.850876, 
    farPlane=1.37263, width=0.684817, height=0.309339, viewOffsetX=0.182507, 
    viewOffsetY=0.0330712)
p = mdb.models['Model-2'].parts['Part-5']
del p.features['Round-1']
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.738759, 
    farPlane=1.26806, width=0.594581, height=0.268578, cameraPosition=(
    0.871492, 0.299228, 0.43439), cameraUpVector=(-0.565716, 0.789508, 
    -0.237996), cameraTarget=(0.10549, 0.019294, 0.0825129), 
    viewOffsetX=0.158459, viewOffsetY=0.0287135)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-2'].parts['Part-5']
e1 = p.edges
p.Round(radius=0.01, edgeList=(e1[1], e1[3], e1[6], e1[9]))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.722371, 
    farPlane=1.28444, width=0.903899, height=0.4083, viewOffsetX=0.142039, 
    viewOffsetY=0.0683763)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.749485, 
    farPlane=1.20167, width=0.937826, height=0.423626, cameraPosition=(
    -0.22347, 0.187604, 0.827542), cameraUpVector=(0.448116, 0.802724, 
    -0.393479), cameraTarget=(-0.166572, 0.0926829, -0.0537594), 
    viewOffsetX=0.14737, viewOffsetY=0.0709427)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.745699, 
    farPlane=1.20546, width=0.933089, height=0.421486, cameraPosition=(
    -0.191817, 0.0718959, 0.842048), cameraUpVector=(-0.0769746, 0.895956, 
    -0.437421), cameraTarget=(-0.134919, -0.0230252, -0.0392534), 
    viewOffsetX=0.146626, viewOffsetY=0.0705843)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.76017, 
    farPlane=1.19099, width=0.742645, height=0.335461, viewOffsetX=0.153191, 
    viewOffsetY=0.0591668)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.706733, 
    farPlane=1.25441, width=0.69044, height=0.311879, cameraPosition=(0.598893, 
    0.157499, 0.709288), cameraUpVector=(-0.691747, 0.714202, -0.106778), 
    cameraTarget=(0.0372356, -0.0690837, 0.0595649), viewOffsetX=0.142422, 
    viewOffsetY=0.0550076)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.715464, 
    farPlane=1.2435, width=0.69897, height=0.315732, cameraPosition=(0.421765, 
    0.370399, 0.75354), cameraUpVector=(-0.461308, 0.72454, -0.51209), 
    cameraTarget=(-0.0325887, 0.0130927, 0.0791259), viewOffsetX=0.144182, 
    viewOffsetY=0.0556872)
#: 
#: Point 1: 200.E-03, 33.2E-03, -10.E-03  Point 2: 190.E-03, 36.527E-03, 0.
#:    Distance: 14.528E-03  Components: -10.E-03, 3.327E-03, 10.E-03
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.718104, 
    farPlane=1.24086, width=0.701549, height=0.316897, viewOffsetX=0.19934, 
    viewOffsetY=0.0530663)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
mdb.models['Model-2'].Material(name='Thin-Ply')
mdb.models['Model-2'].materials['Thin-Ply'].Elastic(type=LAMINA, table=((
    157000000000.0, 9400000000.0, 0.35, 5200000000.0, 5200000000.0, 
    5200000000.0), ))
mdb.models['Model-2'].materials['Thin-Ply'].Expansion(type=ORTHOTROPIC, table=(
    (-9e-08, 2.65e-05, 0.0), ))
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-5'].CompositeLayup(
    name='CompositeLayup-1', description='', elementType=SHELL, 
    offsetType=MIDDLE_SURFACE, symmetric=False, 
    thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
mdb.models['Model-2'].Material(name='Composite')
mdb.models['Model-2'].materials['Composite'].Elastic(type=LAMINA, table=((
    164000000000.0, 12000000000.0, 0.3, 4600000000.0, 4600000000.0, 
    4600000000.0), ))
mdb.models['Model-2'].materials['Composite'].Expansion(type=ORTHOTROPIC, 
    table=((-1.8e-08, 3e-05, 0.0), ))
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region4 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region5 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region6 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region7 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region8 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-5'].CompositeLayup(
    name='Symm', description='', elementType=SHELL, offsetType=MIDDLE_SURFACE, 
    symmetric=False, thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1-Copy1', 
    region=region5, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2-Copy1', 
    region=region6, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3-Copy1', 
    region=region7, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4-Copy1', 
    region=region8, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-2'].parts['Part-5'].compositeLayups.changeKey(
    fromName='CompositeLayup-1', toName='Connector')
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-5']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-5'].CompositeLayup(
    name='CompositeLayup-3', description='', elementType=SHELL, 
    offsetType=MIDDLE_SURFACE, symmetric=False, 
    thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
p = mdb.models['Model-2'].parts['Part-5']
p.seedPart(size=0.015, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-2'].parts['Part-5']
p.seedPart(size=0.005, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-2'].parts['Part-5']
p.generateMesh()
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-2'].parts['Part-5']
del p.features['Part From Merge-1']
#: Warning: Failed to attach mesh to part geometry.
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON, mesh=OFF)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=OFF)
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
a = mdb.models['Model-2'].rootAssembly
del a.features['Part-5-1']
a = mdb.models['Model-2'].rootAssembly
a.resumeFeatures(('Part-2-1', 'Part-1-1', 'Part-3-1', 'Part-4-1', ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.607596, 
    farPlane=1.16884, width=0.927278, height=0.418861, viewOffsetX=0.110319, 
    viewOffsetY=-0.0515277)
a1 = mdb.models['Model-2'].rootAssembly
a1.InstanceFromBooleanMerge(name='Part-6', instances=(a1.instances['Part-4-1'], 
    a1.instances['Part-3-1'], a1.instances['Part-1-1'], 
    a1.instances['Part-2-1'], ), originalInstances=SUPPRESS, domain=GEOMETRY)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p1 = mdb.models['Model-2'].parts['Part-6']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-2'].parts.changeKey(fromName='Part-6', toName='Part-622')
#: Warning: One or more instances of this part exists in the
#: assembly. They have been modified to refer to the renamed part.
#: Any assembly features and attributes that depend on the original
#: instance may become invalid due to this operation. You may need
#: to edit assembly attributes, sets, surfaces, and reference points.
p1 = mdb.models['Model-2'].parts['Part-5']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-2'].parts.changeKey(fromName='Part-5', toName='Part-6')
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.736295, 
    farPlane=1.03033, width=1.62885, height=0.735767, viewOffsetX=0.303045, 
    viewOffsetY=-0.0427699)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(session.views['Left'])
session.viewports['Viewport: 1'].view.setValues(session.views['Back'])
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.fitView()
a1 = mdb.models['Model-2'].rootAssembly
p = mdb.models['Model-2'].parts['Part-6']
a1.Instance(name='Part-6-2', part=p, dependent=ON)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-2'].rootAssembly
a.deleteFeatures(('Part-6-2', 'Part-6-1', ))
a1 = mdb.models['Model-2'].rootAssembly
p = mdb.models['Model-2'].parts['Part-622']
a1.Instance(name='Part-622-1', part=p, dependent=ON)
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
p = mdb.models['Model-2'].parts['Part-622']
e = p.edges
p.Round(radius=0.01, edgeList=(e[1], e[3], e[6], e[9]))
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON, mesh=OFF)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=OFF)
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].CompositeLayup(
    name='CompositeLayup-1', description='', elementType=SHELL, 
    offsetType=MIDDLE_SURFACE, symmetric=False, 
    thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
mdb.models['Model-2'].parts['Part-622'].compositeLayups.changeKey(
    fromName='CompositeLayup-1', toName='Symm')
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#a9 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].CompositeLayup(
    name='CompositeLayup-2', description='', elementType=SHELL, 
    offsetType=MIDDLE_SURFACE, symmetric=False, 
    thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Thin-Ply', thicknessType=SPECIFY_THICKNESS, thickness=4e-05, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region4 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region5 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region6 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region7 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region8 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].CompositeLayup(
    name='CompositeLayup-3', description='', elementType=SHELL, 
    offsetType=MIDDLE_SURFACE, symmetric=False, 
    thicknessAssignment=FROM_SECTION)
compositeLayup.Section(preIntegrate=OFF, integrationRule=SIMPSON, 
    thicknessType=UNIFORM, poissonDefinition=DEFAULT, temperature=GRADIENT, 
    useDensity=OFF)
compositeLayup.ReferenceOrientation(orientationType=GLOBAL, localCsys=None, 
    fieldName='', additionalRotationType=ROTATION_NONE, angle=0.0, axis=AXIS_3)
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1-Copy1', 
    region=region5, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2-Copy1', 
    region=region6, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3-Copy1', 
    region=region7, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4-Copy1', 
    region=region8, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].compositeLayups['Symm']
compositeLayup.orientation.setValues(additionalRotationType=ROTATION_NONE, 
    angle=0.0)
compositeLayup.deletePlies()
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
mdb.models['Model-2'].parts['Part-622'].compositeLayups.changeKey(
    fromName='Symm', toName='Unsymm')
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
mdb.models['Model-2'].parts['Part-622'].compositeLayups.changeKey(
    fromName='CompositeLayup-3', toName='Symm')
mdb.models['Model-2'].parts['Part-622'].compositeLayups.changeKey(
    fromName='CompositeLayup-2', toName='Connector')
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
a = mdb.models['Model-2'].rootAssembly
a.regenerate()
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a1 = mdb.models['Model-2'].rootAssembly
a1.makeIndependent(instances=(a1.instances['Part-622-1'], ))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=ON)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
pickedEdges = e1.getSequenceFromMask(mask=('[#28a2d0 ]', ), )
a.seedEdgeBySize(edges=pickedEdges, size=0.005, deviationFactor=0.1, 
    constraint=FINER)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
edges1 = e1.getSequenceFromMask(mask=('[#28a2d0 ]', ), )
a.Set(edges=edges1, name='Edge Seeds-1')
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.620098, 
    farPlane=1.15634, width=0.786792, height=0.35651, viewOffsetX=-0.0188855, 
    viewOffsetY=-0.0475869)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.574819, 
    farPlane=1.13383, width=0.729343, height=0.330479, cameraPosition=(
    0.704967, 0.246965, -0.643178), cameraUpVector=(-0.516407, 0.833272, 
    0.197437), cameraTarget=(0.0333219, 0.0559683, -0.0942293), 
    viewOffsetX=-0.0175065, viewOffsetY=-0.0441122)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.558964, 
    farPlane=1.09985, width=0.709226, height=0.321363, cameraPosition=(
    -0.426959, -0.257407, -0.723346), cameraUpVector=(-0.372495, 0.87989, 
    0.295029), cameraTarget=(0.057096, 0.0577567, -0.0485909), 
    viewOffsetX=-0.0170236, viewOffsetY=-0.0428955)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.535739, 
    farPlane=1.0528, width=0.679758, height=0.30801, cameraPosition=(-0.340526, 
    0.19278, -0.805025), cameraUpVector=(0.268789, 0.877208, 0.397816), 
    cameraTarget=(0.0914807, 0.0518238, -0.0418521), viewOffsetX=-0.0163163, 
    viewOffsetY=-0.0411132)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.551548, 
    farPlane=1.037, width=0.513598, height=0.232721, viewOffsetX=0.0127328, 
    viewOffsetY=-0.0442363)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.567032, 
    farPlane=1.06253, width=0.528017, height=0.239254, cameraPosition=(
    -0.595317, 0.114151, 0.370277), cameraUpVector=(0.483783, 0.875182, 
    -0.0032128), cameraTarget=(0.100827, 0.0656195, -0.179232), 
    viewOffsetX=0.0130903, viewOffsetY=-0.0454782)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.552658, 
    farPlane=1.06042, width=0.514632, height=0.233189, cameraPosition=(
    -0.41809, 0.322768, -0.73103), cameraUpVector=(0.64806, 0.721541, 
    0.243714), cameraTarget=(0.126361, 0.0288483, -0.093758), 
    viewOffsetX=0.0127585, viewOffsetY=-0.0443253)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.54874, 
    farPlane=1.0454, width=0.510983, height=0.231536, cameraPosition=(0.531888, 
    0.213116, -0.742924), cameraUpVector=(-0.0894726, 0.826468, 0.555828), 
    cameraTarget=(0.00809875, 0.045561, -0.0454276), viewOffsetX=0.012668, 
    viewOffsetY=-0.0440111)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.525744, 
    farPlane=1.00986, width=0.48957, height=0.221833, cameraPosition=(0.46314, 
    0.145717, 0.51766), cameraUpVector=(-0.312784, 0.902006, -0.297575), 
    cameraTarget=(-0.0347995, 0.0602809, -0.21288), viewOffsetX=0.0121371, 
    viewOffsetY=-0.0421668)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.539488, 
    farPlane=0.996116, width=0.346569, height=0.157037, viewOffsetX=0.0325517, 
    viewOffsetY=-0.0553989)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
pickedEdges = e1.getSequenceFromMask(mask=('[#c31405 ]', ), )
a.seedEdgeBySize(edges=pickedEdges, size=0.005, deviationFactor=0.1, 
    constraint=FINER)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
pickedEdges = e1.getSequenceFromMask(mask=('[#c31405 ]', ), )
a.seedEdgeBySize(edges=pickedEdges, size=0.002, deviationFactor=0.1, 
    constraint=FINER)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
pickedEdges = e1.getSequenceFromMask(mask=('[#c31405 ]', ), )
a.seedEdgeBySize(edges=pickedEdges, size=0.003, deviationFactor=0.1, 
    constraint=FINER)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.generateMesh(regions=partInstances)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.518729, 
    farPlane=1.01687, width=0.618685, height=0.280338, viewOffsetX=-0.0107483, 
    viewOffsetY=-0.0570167)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.514445, 
    farPlane=1.04173, width=0.613575, height=0.278022, cameraPosition=(
    -0.555785, 0.239371, 0.331781), cameraUpVector=(0.203652, 0.783805, 
    -0.586665), cameraTarget=(0.129142, 0.0423812, -0.198315), 
    viewOffsetX=-0.0106596, viewOffsetY=-0.0565458)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.561733, 
    farPlane=0.975355, width=0.669975, height=0.303578, cameraPosition=(
    0.139754, 0.278913, 0.609422), cameraUpVector=(0.387475, 0.705218, 
    -0.593743), cameraTarget=(0.0834106, 0.0167737, -0.23736), 
    viewOffsetX=-0.0116394, viewOffsetY=-0.0617435)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.556355, 
    farPlane=0.980732, width=0.66356, height=0.300671, cameraPosition=(
    0.0786573, 0.295517, 0.608347), cameraUpVector=(-0.303816, 0.765972, 
    -0.566553), cameraTarget=(0.0223139, 0.033378, -0.238435), 
    viewOffsetX=-0.011528, viewOffsetY=-0.0611523)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.506829, 
    farPlane=1.03413, width=0.604491, height=0.273906, cameraPosition=(
    0.604139, 0.140467, 0.406559), cameraUpVector=(-0.511056, 0.858633, 
    -0.0396406), cameraTarget=(-0.0637096, 0.061, -0.173608), 
    viewOffsetX=-0.0105018, viewOffsetY=-0.0557086)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.481617, 
    farPlane=1.00816, width=0.574421, height=0.260281, cameraPosition=(
    0.557772, 0.370316, 0.32834), cameraUpVector=(-0.632767, 0.718324, 
    -0.289164), cameraTarget=(-0.0713182, 0.0191963, -0.19117), 
    viewOffsetX=-0.00997939, viewOffsetY=-0.0529374)
session.viewports['Viewport: 1'].view.setValues(width=0.614724, 
    height=0.278543, viewOffsetX=-0.0103119, viewOffsetY=-0.0490026)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.52463, 
    farPlane=1.00469, width=0.665662, height=0.301624, cameraPosition=(
    0.319898, 0.26606, 0.562125), cameraUpVector=(-0.161669, 0.826739, 
    -0.538856), cameraTarget=(0.0147694, 0.040985, -0.241099), 
    viewOffsetX=-0.0111664, viewOffsetY=-0.0530631)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
pickedRegions = f1.getSequenceFromMask(mask=('[#14 ]', ), )
a.deleteMesh(regions=pickedRegions)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
pickedRegions = f1.getSequenceFromMask(mask=('[#14 ]', ), )
a.setMeshControls(regions=pickedRegions, elemShape=QUAD, technique=STRUCTURED)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.generateMesh(regions=partInstances)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.490122, 
    farPlane=1.01618, width=0.621878, height=0.281784, cameraPosition=(
    0.701345, 0.260444, 0.199822), cameraUpVector=(-0.506816, 0.832508, 
    -0.22376), cameraTarget=(-0.0725202, 0.0433535, -0.178247), 
    viewOffsetX=-0.0104319, viewOffsetY=-0.0495728)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.530638, 
    farPlane=0.975662, width=0.221055, height=0.100164, viewOffsetX=-0.0100342, 
    viewOffsetY=-0.082825)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.50541, 
    farPlane=0.866964, width=0.210546, height=0.0954022, cameraPosition=(
    0.479692, 0.60245, -0.0928277), cameraUpVector=(-0.766766, 0.280841, 
    -0.577234), cameraTarget=(-0.0815699, -0.0788343, -0.191662), 
    viewOffsetX=-0.00955715, viewOffsetY=-0.0788873)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.490049, 
    farPlane=0.882325, width=0.404864, height=0.183451, viewOffsetX=0.00557675, 
    viewOffsetY=-0.0740349)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.478478, 
    farPlane=0.928066, width=0.395304, height=0.17912, cameraPosition=(
    0.315852, 0.28961, 0.487406), cameraUpVector=(-0.61493, 0.714457, 
    -0.333784), cameraTarget=(-0.0260874, 0.0442801, -0.294785), 
    viewOffsetX=0.00544507, viewOffsetY=-0.0722868)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.496491, 
    farPlane=0.875103, width=0.410186, height=0.185863, cameraPosition=(
    -0.0609997, 0.121016, 0.550938), cameraUpVector=(-0.214634, 0.892253, 
    -0.397262), cameraTarget=(0.101303, 0.10316, -0.322144), 
    viewOffsetX=0.00565006, viewOffsetY=-0.0750081)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.482128, 
    farPlane=0.889467, width=0.577384, height=0.261623, viewOffsetX=0.00389203, 
    viewOffsetY=-0.0830006)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.482756, 
    farPlane=0.986012, width=0.578137, height=0.261965, cameraPosition=(
    0.678735, 0.136691, 0.252924), cameraUpVector=(-0.182474, 0.90636, 
    -0.381071), cameraTarget=(-0.0545643, 0.105406, -0.247303), 
    viewOffsetX=0.00389711, viewOffsetY=-0.0831088)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.445749, 
    farPlane=0.96833, width=0.533818, height=0.241883, cameraPosition=(
    0.544774, 0.360764, 0.288717), cameraUpVector=(-0.511528, 0.766512, 
    -0.388328), cameraTarget=(-0.0866762, 0.0508583, -0.253651), 
    viewOffsetX=0.00359837, viewOffsetY=-0.0767379)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.436531, 
    farPlane=0.977548, width=0.712326, height=0.322768, viewOffsetX=0.0322589, 
    viewOffsetY=-0.0679199)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
faces1 = f1.getSequenceFromMask(mask=('[#ff ]', ), )
a.Set(faces=faces1, name='Allgeo')
#: The set 'Allgeo' has been created (8 faces).
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.483011, 
    farPlane=0.995044, width=0.788172, height=0.357135, cameraPosition=(
    0.735123, 0.291998, 0.0462199), cameraUpVector=(-0.47435, 0.824293, 
    -0.309085), cameraTarget=(-0.0969522, 0.085325, -0.185882), 
    viewOffsetX=0.0356937, viewOffsetY=-0.0751518)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.486082, 
    farPlane=0.953074, width=0.793183, height=0.359405, cameraPosition=(
    0.572525, 0.563733, -0.12929), cameraUpVector=(-0.855605, 0.510688, 
    -0.0844813), cameraTarget=(-0.111778, -0.00253138, -0.126525), 
    viewOffsetX=0.0359206, viewOffsetY=-0.0756296)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.488199, 
    farPlane=0.98321, width=0.796637, height=0.36097, cameraPosition=(0.706879, 
    0.398684, -0.078583), cameraUpVector=(-0.665859, 0.739944, -0.0954716), 
    cameraTarget=(-0.110435, 0.0558289, -0.136739), viewOffsetX=0.036077, 
    viewOffsetY=-0.075959)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.526857, 
    farPlane=0.944552, width=0.365986, height=0.165835, viewOffsetX=0.0912173, 
    viewOffsetY=0.0141926)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
pickedRegions = f1.getSequenceFromMask(mask=('[#42 ]', ), )
a.deleteMesh(regions=pickedRegions)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
pickedRegions = f1.getSequenceFromMask(mask=('[#42 ]', ), )
a.setMeshControls(regions=pickedRegions, elemShape=QUAD, technique=STRUCTURED)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.deleteMesh(regions=partInstances)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.seedPartInstance(regions=partInstances, size=0.016, deviationFactor=0.1, 
    minSizeFactor=0.1)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.seedPartInstance(regions=partInstances, size=0.005, deviationFactor=0.1, 
    minSizeFactor=0.1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.532554, 
    farPlane=0.938854, width=0.347748, height=0.157571, viewOffsetX=0.0831118, 
    viewOffsetY=0.0227707)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.seedPartInstance(regions=partInstances, size=0.004, deviationFactor=0.1, 
    minSizeFactor=0.1)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.generateMesh(regions=partInstances)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.562849, 
    farPlane=0.90856, width=0.00962458, height=0.00436108, 
    viewOffsetX=-0.00583257, viewOffsetY=0.00319239)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:39 #4 ]', ), )
a.Set(nodes=nodes1, name='center1')
#: The set 'center1' has been created (1 node).
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.529083, 
    farPlane=0.942325, width=0.343855, height=0.155807, viewOffsetX=0.0378269, 
    viewOffsetY=-0.127212)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.560484, 
    farPlane=0.99325, width=0.364262, height=0.165054, cameraPosition=(
    0.797436, 0.234234, -0.267927), cameraUpVector=(-0.446675, 0.877513, 
    0.174504), cameraTarget=(-0.0551954, 0.0964097, -0.0606629), 
    viewOffsetX=0.0400718, viewOffsetY=-0.134762)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.60654, 
    farPlane=1.00125, width=0.394194, height=0.178617, cameraPosition=(
    0.851151, 0.020424, -0.0457381), cameraUpVector=(-0.225522, 0.969964, 
    0.0911554), cameraTarget=(-0.0298709, 0.124846, -0.0885225), 
    viewOffsetX=0.0433646, viewOffsetY=-0.145836)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.603686, 
    farPlane=1.0041, width=0.392339, height=0.177776, cameraPosition=(0.85546, 
    0.0346269, -0.099805), cameraUpVector=(-0.21377, 0.961873, -0.170593), 
    cameraTarget=(-0.0255619, 0.139049, -0.142589), viewOffsetX=0.0431605, 
    viewOffsetY=-0.14515)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.581825, 
    farPlane=0.96936, width=0.378132, height=0.171338, cameraPosition=(
    0.814319, 0.214162, -0.152889), cameraUpVector=(-0.427549, 0.878578, 
    -0.212842), cameraTarget=(-0.0690728, 0.121698, -0.151097), 
    viewOffsetX=0.0415976, viewOffsetY=-0.139894)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.58318, 
    farPlane=0.968005, width=0.379013, height=0.171737, cameraPosition=(
    0.815068, 0.207764, -0.113687), cameraUpVector=(-0.429688, 0.902713, 
    -0.021852), cameraTarget=(-0.0683236, 0.1153, -0.111895), 
    viewOffsetX=0.0416945, viewOffsetY=-0.14022)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.618839, 
    farPlane=0.932346, width=0.00388167, height=0.00175886, 
    viewOffsetX=0.0153434, viewOffsetY=-0.123175)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:124 #80000 ]', ), )
a.Set(nodes=nodes1, name='center2')
#: The set 'center2' has been created (1 node).
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.641399, 
    farPlane=1.13638, width=0.559143, height=0.253358, cameraPosition=(
    -0.42751, -0.0216629, 0.61978), cameraUpVector=(-0.137477, 0.905195, 
    -0.402147))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.690955, 
    farPlane=1.09822, width=0.602344, height=0.272933, cameraPosition=(
    -0.0526042, -0.0597256, 0.754861), cameraUpVector=(0.0583229, 0.976501, 
    -0.207469), cameraTarget=(0.0600121, 0.0510423, -0.119198))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.677997, 
    farPlane=1.10499, width=0.591047, height=0.267814, cameraPosition=(
    0.172227, 0.295771, 0.727981), cameraUpVector=(-0.246395, 0.800672, 
    -0.546089), cameraTarget=(0.0616129, 0.0535735, -0.119389))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.679074, 
    farPlane=1.10391, width=0.591986, height=0.268239, cameraPosition=(
    0.172227, 0.295771, 0.727981), cameraUpVector=(-0.0657491, 0.816146, 
    -0.574093), cameraTarget=(0.0616129, 0.0535735, -0.119389))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.695266, 
    farPlane=1.08772, width=0.44664, height=0.202381, viewOffsetX=-0.0161704, 
    viewOffsetY=-0.00881935)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.659629, 
    farPlane=1.10548, width=0.423747, height=0.192008, cameraPosition=(
    0.897151, -0.0247284, -0.357124), cameraUpVector=(-0.374122, 0.847681, 
    -0.376125), cameraTarget=(0.0383105, 0.0416136, -0.140508), 
    viewOffsetX=-0.0153415, viewOffsetY=-0.0083673)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.648434, 
    farPlane=1.12251, width=0.416555, height=0.188749, cameraPosition=(
    0.700998, 0.0780443, 0.47548), cameraUpVector=(-0.264148, 0.932805, 
    -0.245156), cameraTarget=(0.0593295, 0.0524694, -0.138147), 
    viewOffsetX=-0.0150811, viewOffsetY=-0.00822529)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.630833, 
    farPlane=1.12246, width=0.405248, height=0.183626, cameraPosition=(
    0.689075, 0.373517, 0.391044), cameraUpVector=(-0.463459, 0.754618, 
    -0.464497), cameraTarget=(0.056295, 0.049481, -0.141422), 
    viewOffsetX=-0.0146717, viewOffsetY=-0.00800202)
a = mdb.models['Model-2'].rootAssembly
f1 = a.instances['Part-622-1'].faces
pickedRegions = f1.getSequenceFromMask(mask=('[#14 ]', ), )
a.deleteMesh(regions=pickedRegions)
a = mdb.models['Model-2'].rootAssembly
e1 = a.instances['Part-622-1'].edges
pickedEdges = e1.getSequenceFromMask(mask=('[#a280 ]', ), )
a.seedEdgeBySize(edges=pickedEdges, size=0.004, deviationFactor=0.1, 
    constraint=FINER)
a = mdb.models['Model-2'].rootAssembly
partInstances =(a.instances['Part-622-1'], )
a.generateMesh(regions=partInstances)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.672279, 
    farPlane=1.09465, width=0.431874, height=0.19569, cameraPosition=(0.34258, 
    0.166366, 0.702932), cameraUpVector=(-0.193902, 0.892007, -0.408321), 
    cameraTarget=(0.0684033, 0.0553088, -0.134579), viewOffsetX=-0.0156356, 
    viewOffsetY=-0.00852775)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.669961, 
    farPlane=1.09697, width=0.430385, height=0.195015, cameraPosition=(
    0.344787, 0.162029, 0.702785), cameraUpVector=(-0.00734999, 0.883554, 
    -0.468272), cameraTarget=(0.0706104, 0.0509714, -0.134726), 
    viewOffsetX=-0.0155817, viewOffsetY=-0.00849834)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.655577, 
    farPlane=1.11675, width=0.421145, height=0.190828, cameraPosition=(
    0.855745, 0.0555429, 0.243775), cameraUpVector=(-0.542032, 0.744008, 
    0.390709), cameraTarget=(0.0513164, 0.0651377, -0.1327), 
    viewOffsetX=-0.0152472, viewOffsetY=-0.00831588)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.673191, 
    farPlane=1.08913, width=0.432461, height=0.195955, cameraPosition=(
    0.915714, 0.210981, -0.205411), cameraUpVector=(-0.476402, 0.858248, 
    0.190923), cameraTarget=(0.0431921, 0.0574472, -0.141662), 
    viewOffsetX=-0.0156569, viewOffsetY=-0.00853931)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.678913, 
    farPlane=1.08341, width=0.340513, height=0.154293, viewOffsetX=-0.00383411, 
    viewOffsetY=0.0068809)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.680785, 
    farPlane=1.08154, width=0.341452, height=0.154718, cameraPosition=(
    0.916074, 0.209755, -0.203443), cameraUpVector=(-0.494048, 0.86909, 
    -0.024487), cameraTarget=(0.0435517, 0.0562209, -0.139694), 
    viewOffsetX=-0.00384468, viewOffsetY=0.00689987)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.68411, 
    farPlane=1.07614, width=0.34312, height=0.155474, cameraPosition=(0.913845, 
    0.235772, -0.117863), cameraUpVector=(-0.515354, 0.854496, -0.0651664), 
    cameraTarget=(0.0442779, 0.0561048, -0.140309), viewOffsetX=-0.00386346, 
    viewOffsetY=0.00693357)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.71583, 
    farPlane=1.04442, width=0.00824005, height=0.00373372, 
    viewOffsetX=-0.0147645, viewOffsetY=0.0262515)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:40 #40000000 ]', ), )
a.Set(nodes=nodes1, name='center1')
#: The set 'center1' has been edited (1 node).
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.65742, 
    farPlane=1.10283, width=0.657755, height=0.298041, viewOffsetX=-0.0339092, 
    viewOffsetY=0.0136402)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.641597, 
    farPlane=1.10383, width=0.641925, height=0.290868, cameraPosition=(
    0.908932, -0.0505347, -0.22752), cameraUpVector=(-0.215591, 0.976464, 
    -0.00617869), cameraTarget=(0.0319791, 0.0596112, -0.139476), 
    viewOffsetX=-0.0330931, viewOffsetY=0.0133119)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.703041, 
    farPlane=1.04239, width=0.00925024, height=0.00419146, 
    viewOffsetX=-0.0319387, viewOffsetY=-0.0222623)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:142 #2000 ]', ), )
a.Set(nodes=nodes1, name='center2')
#: The set 'center2' has been edited (1 node).
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.681873, 
    farPlane=1.06356, width=0.246197, height=0.111557, viewOffsetX=-0.0791738, 
    viewOffsetY=-0.00884266)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.711706, 
    farPlane=1.15035, width=0.256969, height=0.116437, cameraPosition=(
    0.797207, 0.00180265, 0.430286), cameraUpVector=(0.0271394, 0.831624, 
    -0.554675), cameraTarget=(0.102851, 0.0110958, -0.123531), 
    viewOffsetX=-0.0826378, viewOffsetY=-0.00922954)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.765976, 
    farPlane=1.16414, width=0.276564, height=0.125316, cameraPosition=(
    0.366276, 0.313846, 0.754172), cameraUpVector=(-0.157619, 0.818393, 
    -0.55262), cameraTarget=(0.121509, 0.0749578, -0.0655545), 
    viewOffsetX=-0.0889393, viewOffsetY=-0.00993333)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.799402, 
    farPlane=1.15586, width=0.288633, height=0.130785, cameraPosition=(
    0.250065, 0.117667, 0.832861), cameraUpVector=(0.166235, 0.878704, 
    -0.447488), cameraTarget=(0.115988, 0.0348202, -0.0412614), 
    viewOffsetX=-0.0928205, viewOffsetY=-0.0103668)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.798292, 
    farPlane=1.15698, width=0.288232, height=0.130603, cameraPosition=(
    0.247509, 0.15943, 0.829295), cameraUpVector=(-0.17599, 0.90075, 
    -0.397085), cameraTarget=(0.113432, 0.0765831, -0.0448276), 
    viewOffsetX=-0.0926916, viewOffsetY=-0.0103524)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.792832, 
    farPlane=1.16243, width=0.366649, height=0.166135, viewOffsetX=-0.0992489, 
    viewOffsetY=-0.00784072)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.828213, 
    farPlane=1.15557, width=0.383011, height=0.173549, cameraPosition=(
    0.0862141, 0.0331736, 0.867319), cameraUpVector=(0.047552, 0.946904, 
    -0.317981), cameraTarget=(0.102389, 0.0468476, -0.0206459), 
    viewOffsetX=-0.103678, viewOffsetY=-0.00819062)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.862183, 
    farPlane=1.1216, width=0.0097351, height=0.00441116, 
    viewOffsetX=-0.0534163, viewOffsetY=-0.00648521)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:111 #4 ]', ), )
a.Set(nodes=nodes1, name='center3')
#: The set 'center3' has been created (1 node).
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.651222, 
    farPlane=1.13108, width=0.567705, height=0.257238, cameraPosition=(
    0.368693, 0.362398, 0.653065), cameraUpVector=(-0.469484, 0.733659, 
    -0.491253))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.672449, 
    farPlane=1.10689, width=0.58621, height=0.265623, cameraPosition=(0.204009, 
    0.364402, 0.699256), cameraUpVector=(0.0376116, 0.753155, -0.656767), 
    cameraTarget=(0.0591868, 0.0510776, -0.119148))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.677324, 
    farPlane=1.09585, width=0.59046, height=0.267549, cameraPosition=(
    -0.0160425, 0.410141, 0.689819), cameraUpVector=(0.143046, 0.724518, 
    -0.674249), cameraTarget=(0.0588277, 0.0511522, -0.119163))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.691206, 
    farPlane=1.08197, width=0.41569, height=0.188357, viewOffsetX=-0.00854243, 
    viewOffsetY=0.014369)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.696559, 
    farPlane=1.07713, width=0.418909, height=0.189815, cameraPosition=(
    0.003638, 0.473965, 0.661549), cameraUpVector=(0.129024, 0.668261, 
    -0.732653), cameraTarget=(0.0589495, 0.0517398, -0.117936), 
    viewOffsetX=-0.00860858, viewOffsetY=0.0144803)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.735833, 
    farPlane=1.03785, width=0.00354743, height=0.00160741, 
    viewOffsetX=-0.0170218, viewOffsetY=0.0375538)
a = mdb.models['Model-2'].rootAssembly
n1 = a.instances['Part-622-1'].nodes
nodes1 = n1.getSequenceFromMask(mask=('[#0:72 #200 ]', ), )
a.Set(nodes=nodes1, name='center4')
#: The set 'center4' has been created (1 node).
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.734573, 
    farPlane=1.03911, width=0.0180701, height=0.00818791, 
    viewOffsetX=-0.0157379, viewOffsetY=0.0394138)
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.61799, 
    farPlane=1.15845, width=0.810618, height=0.367306, viewOffsetX=-0.0243212, 
    viewOffsetY=-0.0796356)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.594944, 
    farPlane=1.18149, width=1.06334, height=0.481818, viewOffsetX=0.0646267, 
    viewOffsetY=-0.0709662)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.603479, 
    farPlane=1.09025, width=1.07859, height=0.48873, cameraPosition=(0.0269942, 
    0.205225, 0.710568), cameraUpVector=(0.0459378, 0.881514, -0.469918), 
    cameraTarget=(0.0779346, 0.0711602, -0.165995), viewOffsetX=0.0655538, 
    viewOffsetY=-0.0719842)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.594242, 
    farPlane=1.12751, width=1.06208, height=0.481249, cameraPosition=(0.233021, 
    0.325093, 0.675991), cameraUpVector=(-0.0199684, 0.802064, -0.596904), 
    cameraTarget=(0.0709637, 0.0688729, -0.158886), viewOffsetX=0.0645504, 
    viewOffsetY=-0.0708824)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(mesh=OFF, loads=ON, 
    bcs=ON, predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.meshOptions.setValues(
    meshTechnique=OFF)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center1']
mdb.models['Model-2'].DisplacementBC(name='BC-1', createStepName='Initial', 
    region=region, u1=SET, u2=SET, u3=SET, ur1=SET, ur2=SET, ur3=SET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center2']
mdb.models['Model-2'].DisplacementBC(name='BC-2', createStepName='Initial', 
    region=region, u1=SET, u2=SET, u3=SET, ur1=SET, ur2=SET, ur3=SET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center3']
mdb.models['Model-2'].DisplacementBC(name='BC-3', createStepName='Initial', 
    region=region, u1=SET, u2=SET, u3=SET, ur1=SET, ur2=SET, ur3=SET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center4']
mdb.models['Model-2'].DisplacementBC(name='BC-4', createStepName='Initial', 
    region=region, u1=SET, u2=SET, u3=SET, ur1=SET, ur2=SET, ur3=SET, 
    amplitude=UNSET, distributionType=UNIFORM, fieldName='', localCsys=None)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
a = mdb.models['Model-2'].rootAssembly
region = a.sets['Allgeo']
mdb.models['Model-2'].Temperature(name='Predefined Field-1', 
    createStepName='Initial', region=region, distributionType=UNIFORM, 
    crossSectionDistribution=CONSTANT_THROUGH_THICKNESS, magnitudes=(200.0, ))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].StaticStep(name='Step-1', previous='Initial', 
    stabilizationMagnitude=0.0002, stabilizationMethod=DAMPING_FACTOR, 
    continueDampingFactors=False, adaptiveDampingRatio=0.05, nlgeom=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
mdb.models['Model-2'].predefinedFields['Predefined Field-1'].setValuesInStep(
    stepName='Step-1', magnitudes=(20.0, ))
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].StaticStep(name='Step-2', previous='Step-1', 
    stabilizationMagnitude=0.0002, stabilizationMethod=DAMPING_FACTOR, 
    continueDampingFactors=False, adaptiveDampingRatio=0.05)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-2')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-1')
mdb.models['Model-2'].steps['Step-1'].setValues(maxNumInc=2000, 
    initialInc=0.0001, minInc=1e-31, maxInc=0.1)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-2')
mdb.models['Model-2'].steps.changeKey(fromName='Step-2', toName='Loading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
mdb.models['Model-2'].boundaryConditions['BC-2'].setValuesInStep(
    stepName='Loading', u1=FREED)
mdb.models['Model-2'].boundaryConditions['BC-3'].setValuesInStep(
    stepName='Loading', u3=FREED, ur1=FREED, ur2=FREED)
mdb.models['Model-2'].boundaryConditions['BC-4'].setValuesInStep(
    stepName='Loading', u3=FREED, ur1=FREED, ur2=FREED)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps.changeKey(fromName='Loading', toName='Eqm Step')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Initial')
mdb.models['Model-2'].StaticStep(name='Step-3', previous='Eqm Step', 
    maxNumInc=2000, stabilizationMagnitude=0.0002, 
    stabilizationMethod=DAMPING_FACTOR, continueDampingFactors=False, 
    adaptiveDampingRatio=0.05, initialInc=1e-05, minInc=1e-31, maxInc=0.1)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Step-3')
mdb.models['Model-2'].steps.changeKey(fromName='Step-3', toName='Loading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center3']
mdb.models['Model-2'].ConcentratedForce(name='Load-1', 
    createStepName='Loading', region=region, cf3=-50.0, 
    distributionType=UNIFORM, field='', localCsys=None)
a = mdb.models['Model-2'].rootAssembly
region = a.sets['center4']
mdb.models['Model-2'].ConcentratedForce(name='Load-2', 
    createStepName='Loading', region=region, cf3=50.0, 
    distributionType=UNIFORM, field='', localCsys=None)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].StaticStep(name='Unloading', previous='Loading', 
    maxNumInc=1000, stabilizationMagnitude=0.0002, 
    stabilizationMethod=DAMPING_FACTOR, continueDampingFactors=False, 
    adaptiveDampingRatio=0.05, initialInc=0.0001, minInc=1e-31, maxInc=0.1)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Unloading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON, adaptiveMeshConstraints=OFF)
mdb.models['Model-2'].loads['Load-1'].setValuesInStep(stepName='Unloading', 
    cf3=0.0)
mdb.models['Model-2'].loads['Load-2'].setValuesInStep(stepName='Unloading', 
    cf3=0.0)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].setValues(displayedObject=None)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.Job(name='chkflap', model='Model-2', description='', type=ANALYSIS, 
    atTime=None, waitMinutes=0, waitHours=0, queue=None, memory=90, 
    memoryUnits=PERCENTAGE, getMemoryFromAnalysis=True, 
    explicitPrecision=SINGLE, nodalOutputPrecision=SINGLE, echoPrint=OFF, 
    modelPrint=OFF, contactPrint=OFF, historyPrint=OFF, userSubroutine='', 
    scratch='', resultsFormat=ODB, multiprocessingMode=DEFAULT, numCpus=2, 
    numDomains=2, numGPUs=0)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Eqm Step')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Eqm Step'].setValues(maxNumInc=2000, 
    initialInc=1e-05, minInc=1e-31, maxInc=0.1)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=34 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=32 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=27 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=27 )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.681559, 
    farPlane=1.11604, width=0.596004, height=0.269221, cameraPosition=(
    0.166949, -0.169925, 0.734406), cameraUpVector=(-0.218264, 0.973547, 
    -0.0675786), cameraTarget=(0.0596212, 0.0508763, -0.119209))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.651471, 
    farPlane=1.14606, width=0.569693, height=0.257336, cameraPosition=(
    0.815154, 0.487115, 0.087558), cameraUpVector=(-0.651307, 0.64545, 
    -0.398991), cameraTarget=(0.0672526, 0.0586118, -0.126824))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.661835, 
    farPlane=1.12217, width=0.578756, height=0.26143, cameraPosition=(0.248915, 
    0.378281, 0.686722), cameraUpVector=(-0.112489, 0.758002, -0.642478), 
    cameraTarget=(0.0606075, 0.0573346, -0.119792))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.660974, 
    farPlane=1.12303, width=0.578003, height=0.26109, cameraPosition=(0.248915, 
    0.378281, 0.686722), cameraUpVector=(-0.220719, 0.755892, -0.616369), 
    cameraTarget=(0.0606075, 0.0573346, -0.119792))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.630937, 
    farPlane=1.16106, width=0.551736, height=0.249225, cameraPosition=(
    0.634024, 0.371038, 0.482305), cameraUpVector=(-0.575211, 0.746677, 
    -0.334074), cameraTarget=(0.0622412, 0.0573039, -0.120659))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.645656, 
    farPlane=1.14988, width=0.564607, height=0.255039, cameraPosition=(
    0.831986, 0.385405, 0.179196), cameraUpVector=(-0.554388, 0.742406, 
    -0.376147), cameraTarget=(0.0639603, 0.0574287, -0.123291))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.642372, 
    farPlane=1.15032, width=0.561736, height=0.253742, cameraPosition=(
    0.493305, 0.271327, 0.626595), cameraUpVector=(-0.292858, 0.833845, 
    -0.467908), cameraTarget=(0.0603574, 0.0562151, -0.118532))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.633081, 
    farPlane=1.16005, width=0.553612, height=0.250072, cameraPosition=(
    0.634642, 0.336234, 0.498789), cameraUpVector=(-0.54719, 0.773008, 
    -0.321002), cameraTarget=(0.0616394, 0.0568038, -0.119691))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.674593, 
    farPlane=1.12852, width=0.589913, height=0.26647, cameraPosition=(0.938133, 
    0.148911, 0.00543435), cameraUpVector=(-0.398002, 0.884878, -0.242046), 
    cameraTarget=(0.0644652, 0.0550596, -0.124285))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.653548, 
    farPlane=1.14576, width=0.57151, height=0.258157, cameraPosition=(0.897252, 
    0.270446, 0.0979206), cameraUpVector=(-0.419257, 0.761225, -0.494733), 
    cameraTarget=(0.0638603, 0.0568577, -0.122917))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.675045, 
    farPlane=1.12389, width=0.590308, height=0.266648, cameraPosition=(
    0.916938, 0.30035, -0.0749944), cameraUpVector=(-0.542678, 0.75971, 
    -0.358247), cameraTarget=(0.0641105, 0.0572378, -0.125115))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.639614, 
    farPlane=1.16238, width=0.559324, height=0.252652, cameraPosition=(
    0.809404, 0.188113, -0.59417), cameraUpVector=(-0.532682, 0.846024, 
    0.0221852), cameraTarget=(0.0627655, 0.055834, -0.131609))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.635022, 
    farPlane=1.15977, width=0.555308, height=0.250838, cameraPosition=(
    0.700561, 0.434912, 0.371077), cameraUpVector=(-0.478658, 0.706034, 
    -0.521922), cameraTarget=(0.0612217, 0.0593347, -0.117918))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=32 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=35 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=35 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=35 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=35 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=35 )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.655677, 
    farPlane=1.1397, width=0.573371, height=0.258997, cameraPosition=(0.894352, 
    0.307508, 0.0679225), cameraUpVector=(-0.473179, 0.745445, -0.469482), 
    cameraTarget=(0.0629568, 0.058194, -0.120632))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.64706, 
    farPlane=1.14912, width=0.565836, height=0.255593, cameraPosition=(
    0.878519, 0.287202, 0.146602), cameraUpVector=(-0.436181, 0.780693, 
    -0.447509), cameraTarget=(0.0627897, 0.0579797, -0.119802))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.649562, 
    farPlane=1.14162, width=0.568024, height=0.256581, cameraPosition=(0.3893, 
    0.480913, 0.59342), cameraUpVector=(-0.516437, 0.647328, -0.560588), 
    cameraTarget=(0.0574112, 0.0601094, -0.11489))
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.677635, 
    farPlane=1.12351, width=0.592573, height=0.267672, cameraPosition=(
    0.315877, 0.0568353, 0.735867), cameraUpVector=(-0.144737, 0.941436, 
    -0.304549), cameraTarget=(0.0568134, 0.0566567, -0.11373))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.698198, 
    farPlane=1.0997, width=0.610554, height=0.275794, cameraPosition=(
    0.0977396, 0.163958, 0.767499), cameraUpVector=(-0.0801444, 0.894594, 
    -0.439635), cameraTarget=(0.0538206, 0.0581264, -0.113296))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.649537, 
    farPlane=1.15045, width=0.568001, height=0.256572, cameraPosition=(
    0.484938, 0.13057, 0.661144), cameraUpVector=(-0.146802, 0.910544, 
    -0.386469), cameraTarget=(0.0584432, 0.0577278, -0.114566))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.640492, 
    farPlane=1.15741, width=0.560092, height=0.252999, cameraPosition=(
    0.570995, 0.238269, 0.588245), cameraUpVector=(-0.287234, 0.855996, 
    -0.429846), cameraTarget=(0.0595692, 0.059137, -0.11552))
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['Model-2'].parts['Part-6']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['C:/temp/flap/chkflap.odb'])
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=34 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.641689, 
    farPlane=1.15079, width=0.561139, height=0.253472, cameraPosition=(
    0.629397, 0.590176, 0.314418), cameraUpVector=(-0.510025, 0.540123, 
    -0.669434), cameraTarget=(0.060327, 0.0637029, -0.119073))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.680447, 
    farPlane=1.1219, width=0.595031, height=0.268782, cameraPosition=(0.175747, 
    -0.216804, 0.72121), cameraUpVector=(0.0276286, 0.999123, -0.0314723), 
    cameraTarget=(0.0562661, 0.0564791, -0.115432))
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#14 ]', ), )
region4 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].compositeLayups['Unsymm']
compositeLayup.orientation.setValues(additionalRotationType=ROTATION_NONE, 
    angle=0.0)
compositeLayup.deletePlies()
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=90.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region4 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region5 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region6 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region7 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region8 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].compositeLayups['Symm']
compositeLayup.orientation.setValues(additionalRotationType=ROTATION_NONE, 
    angle=0.0)
compositeLayup.deletePlies()
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=True, plyName='Ply-1-Copy1', 
    region=region5, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=True, plyName='Ply-2-Copy1', 
    region=region6, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=True, plyName='Ply-3-Copy1', 
    region=region7, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=True, plyName='Ply-4-Copy1', 
    region=region8, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
layupOrientation = None
a1 = mdb.models['Model-2'].rootAssembly
a1.regenerate()
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=22 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=1 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=23 )
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].setValues(
    displayedObject=session.odbs['C:/temp/flap/chkflap.odb'])
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(step='Loading')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(stabilizationMagnitude=0.002, 
    stabilizationMethod=DAMPING_FACTOR, continueDampingFactors=False, 
    maxInc=0.05)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=22 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports[session.currentViewportName].odbDisplay.setFrame(
    step='Loading', frame=23)
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
mdb.models['Model-2'].loads['Load-1'].setValues(cf3=-100.0, 
    distributionType=UNIFORM, field='')
mdb.models['Model-2'].loads['Load-2'].setValues(cf3=100.0, 
    distributionType=UNIFORM, field='')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(maxInc=1.0)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(stabilizationMagnitude=0.02, 
    stabilizationMethod=DAMPING_FACTOR, continueDampingFactors=False)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=23 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=23 )
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(stabilizationMagnitude=0.2, 
    stabilizationMethod=DAMPING_FACTOR, continueDampingFactors=False, 
    initialInc=1e-08, maxInc=0.001)
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=51 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.63421, 
    farPlane=1.14329, width=0.554599, height=0.250518)
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.632965, 
    farPlane=1.15113, width=0.55351, height=0.250026, cameraPosition=(0.698408, 
    0.44624, 0.354916), cameraUpVector=(-0.441025, 0.674245, -0.59236), 
    cameraTarget=(0.059804, 0.0510008, -0.119323))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.65638, 
    farPlane=1.13449, width=0.573986, height=0.259275, cameraPosition=(
    0.895102, 0.297649, 0.0567919), cameraUpVector=(-0.524013, 0.793312, 
    -0.309947), cameraTarget=(0.0606483, 0.050363, -0.120603))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.632542, 
    farPlane=1.15745, width=0.553141, height=0.249859, cameraPosition=(
    0.741839, 0.331463, 0.376303), cameraUpVector=(-0.508512, 0.788878, 
    -0.345091), cameraTarget=(0.0594131, 0.0506355, -0.118028))
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(initialInc=0.01, maxInc=1.0)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='U', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'), )
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.634485, 
    farPlane=1.14339, width=0.554839, height=0.250627, cameraUpVector=(
    -0.269266, 0.509297, -0.817382), cameraTarget=(0.0597289, 0.051071, 
    -0.1193))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.683198, 
    farPlane=1.10773, width=0.597437, height=0.269869, cameraPosition=(
    0.253316, 0.110458, 0.74573), cameraUpVector=(0.149774, 0.886789, 
    -0.437234), cameraTarget=(0.0594705, 0.050704, -0.119015))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.668263, 
    farPlane=1.11503, width=0.584377, height=0.26397, cameraPosition=(0.232381, 
    0.314153, 0.711633), cameraUpVector=(-0.168846, 0.801491, -0.573676), 
    cameraTarget=(0.0593011, 0.0523524, -0.119291))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.682505, 
    farPlane=1.10414, width=0.596831, height=0.269596, cameraPosition=(
    0.189406, 0.193762, 0.747932), cameraUpVector=(0.015491, 0.873432, 
    -0.486699), cameraTarget=(0.0591359, 0.0518894, -0.119151))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.665578, 
    farPlane=1.11883, width=0.582032, height=0.26291, cameraPosition=(0.260624, 
    0.299514, 0.709774), cameraUpVector=(-0.224459, 0.808774, -0.543602), 
    cameraTarget=(0.0595427, 0.0524935, -0.119369))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.676881, 
    farPlane=1.11256, width=0.591916, height=0.267375, cameraPosition=(
    0.257052, 0.150823, 0.74107), cameraUpVector=(0.0188012, 0.892255, 
    -0.451141), cameraTarget=(0.0595267, 0.0518292, -0.119229))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.65339, 
    farPlane=1.11917, width=0.571373, height=0.258096, cameraPosition=(
    -0.176715, 0.398496, 0.664861), cameraUpVector=(0.163954, 0.739009, 
    -0.65344), cameraTarget=(0.056374, 0.0536293, -0.119783))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.683702, 
    farPlane=1.09814, width=0.59788, height=0.27007, cameraPosition=(
    -0.0703622, 0.163738, 0.75233), cameraUpVector=(0.0285664, 0.893793, 
    -0.447568), cameraTarget=(0.0561415, 0.0541424, -0.119974))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.679774, 
    farPlane=1.10688, width=0.594445, height=0.268518, cameraPosition=(
    0.212532, 0.15575, 0.748582), cameraUpVector=(-0.151, 0.895519, -0.418622), 
    cameraTarget=(0.0570002, 0.0541182, -0.119985))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.643572, 
    farPlane=1.15882, width=0.562787, height=0.254218, cameraPosition=(
    0.826676, -0.0758218, 0.308054), cameraUpVector=(-0.441848, 0.827739, 
    0.34586), cameraTarget=(0.0605139, 0.0527933, -0.122505))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.651517, 
    farPlane=1.13503, width=0.569735, height=0.257356, cameraPosition=(
    0.382892, 0.446178, 0.611207), cameraUpVector=(-0.120079, 0.687933, 
    -0.715772), cameraTarget=(0.0541219, 0.0603119, -0.118139))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.682949, 
    farPlane=1.10107, width=0.597221, height=0.269772, cameraPosition=(
    0.130069, 0.505248, 0.647093), cameraUpVector=(0.123999, 0.630678, 
    -0.766074), cameraTarget=(0.0526905, 0.0606463, -0.117936))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.680139, 
    farPlane=1.10958, width=0.594764, height=0.268662, cameraPosition=(
    0.188154, 0.240574, 0.741455), cameraUpVector=(0.206046, 0.810712, 
    -0.547988), cameraTarget=(0.0529375, 0.0595207, -0.117535))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.686011, 
    farPlane=1.10832, width=0.599899, height=0.270981, cameraPosition=(
    -0.0699539, -0.0993018, 0.748463), cameraUpVector=(0.000933111, 0.986507, 
    -0.163717), cameraTarget=(0.0510213, 0.0569974, -0.117483))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.64361, 
    farPlane=1.15067, width=0.562821, height=0.254232, cameraPosition=(
    0.855633, 0.337569, 0.159497), cameraUpVector=(-0.590255, 0.791272, 
    -0.159649), cameraTarget=(0.0602548, 0.0613556, -0.123358))
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(adaptiveDampingRatio=0.05)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
mdb.models['Model-2'].loads['Load-1'].setValues(cf3=-500.0, 
    distributionType=UNIFORM, field='')
mdb.models['Model-2'].loads['Load-2'].setValues(cf3=500.0, 
    distributionType=UNIFORM, field='')
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
mdb.models['Model-2'].steps['Loading'].setValues(stabilizationMagnitude=0.2, 
    stabilizationMethod=DISSIPATED_ENERGY_FRACTION, 
    continueDampingFactors=False, adaptiveDampingRatio=0.5)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.649943, 
    farPlane=1.14744, width=0.568357, height=0.256733, cameraPosition=(
    0.573813, 0.00627753, 0.60354), cameraUpVector=(-0.351376, 0.930692, 
    -0.10172), cameraTarget=(0.0597283, 0.0512975, -0.119385))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.677032, 
    farPlane=1.1025, width=0.592046, height=0.267433, cameraPosition=(0.160185, 
    0.468595, 0.661144), cameraUpVector=(-0.198975, 0.675789, -0.709731), 
    cameraTarget=(0.0549076, 0.0566856, -0.118714))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.642908, 
    farPlane=1.13884, width=0.562206, height=0.253954, cameraPosition=(
    0.858316, 0.368029, 0.100247), cameraUpVector=(-0.704575, 0.619211, 
    0.346631), cameraTarget=(0.0561221, 0.0565106, -0.11969))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.649353, 
    farPlane=1.12959, width=0.567842, height=0.2565, cameraPosition=(0.885945, 
    0.31958, -0.297454), cameraUpVector=(-0.551266, 0.790991, 0.265405), 
    cameraTarget=(0.0562045, 0.0563661, -0.120876))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.649092, 
    farPlane=1.13582, width=0.567614, height=0.256397, cameraPosition=(
    0.426206, 0.279501, 0.656184), cameraUpVector=(0.0330441, 0.781959, 
    -0.622453), cameraTarget=(0.0555564, 0.0563096, -0.119532))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.696694, 
    farPlane=1.08442, width=0.60924, height=0.2752, cameraPosition=(0.0541188, 
    0.343833, 0.721275), cameraUpVector=(0.170911, 0.769545, -0.615297), 
    cameraTarget=(0.0537894, 0.0566151, -0.119223))
p = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=ON, bcs=ON, 
    predefinedFields=ON, connectors=ON)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(loads=OFF, bcs=OFF, 
    predefinedFields=OFF, connectors=OFF, adaptiveMeshConstraints=ON)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.684917, 
    farPlane=1.09214, width=0.598941, height=0.270548, cameraPosition=(
    0.00603613, 0.312338, 0.727924), cameraUpVector=(-0.395992, 0.702597, 
    -0.591226))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.617724, 
    farPlane=1.13637, width=0.540182, height=0.244006, cameraPosition=(
    -0.659917, 0.393196, 0.273411), cameraUpVector=(0.238275, 0.552716, 
    -0.79858), cameraTarget=(0.0594963, 0.0510993, -0.119459))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.697075, 
    farPlane=1.07355, width=0.609572, height=0.27535, cameraPosition=(
    0.0396737, 0.215976, 0.747637), cameraUpVector=(0.362414, 0.797088, 
    -0.483019), cameraTarget=(0.050585, 0.0533567, -0.1255))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.621592, 
    farPlane=1.143, width=0.543565, height=0.245534, cameraPosition=(0.774681, 
    0.371515, 0.27551), cameraUpVector=(-0.3087, 0.647763, -0.696496), 
    cameraTarget=(0.0481722, 0.0528461, -0.12395))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.661464, 
    farPlane=1.09526, width=0.578432, height=0.261284, cameraPosition=(
    0.227133, 0.6143, 0.538472), cameraUpVector=(-0.139512, 0.515141, 
    -0.845675), cameraTarget=(0.0518481, 0.0512162, -0.125715))
layupOrientation = None
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region1 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region2 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region3 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region4 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region5 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region6 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region7 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region8 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region9 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region10 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region11 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region12 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region13 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region14 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region15 = regionToolset.Region(faces=faces)
p = mdb.models['Model-2'].parts['Part-622']
f = p.faces
faces = f.getSequenceFromMask(mask=('[#42 ]', ), )
region16 = regionToolset.Region(faces=faces)
compositeLayup = mdb.models['Model-2'].parts['Part-622'].compositeLayups['Symm']
compositeLayup.orientation.setValues(additionalRotationType=ROTATION_NONE, 
    angle=0.0, axis=AXIS_2)
compositeLayup.deletePlies()
compositeLayup.suppress()
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1', region=region1, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2', region=region2, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3', region=region3, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4', region=region4, 
    material='Composite', thicknessType=SPECIFY_THICKNESS, thickness=0.000131, 
    orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1-Copy1', 
    region=region5, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2-Copy1', 
    region=region6, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3-Copy1', 
    region=region7, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4-Copy1', 
    region=region8, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1-Copy2', 
    region=region9, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2-Copy2', 
    region=region10, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3-Copy2', 
    region=region11, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4-Copy2', 
    region=region12, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-1-Copy1-Copy1', 
    region=region13, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-2-Copy1-Copy1', 
    region=region14, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-3-Copy1-Copy1', 
    region=region15, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.CompositePly(suppressed=False, plyName='Ply-4-Copy1-Copy1', 
    region=region16, material='Composite', thicknessType=SPECIFY_THICKNESS, 
    thickness=0.000131, orientationType=SPECIFY_ORIENT, orientationValue=0.0, 
    additionalRotationType=ROTATION_NONE, additionalRotationField='', 
    axis=AXIS_3, angle=0.0, numIntPoints=3)
compositeLayup.resume()
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p1 = mdb.models['Model-2'].parts['Part-622']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
a1 = mdb.models['Model-2'].rootAssembly
a1.regenerate()
a = mdb.models['Model-2'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    adaptiveMeshConstraints=OFF)
mdb.jobs['chkflap'].submit(consistencyChecking=OFF)
#: The job input file "chkflap.inp" has been submitted for analysis.
mdb.save()
#: The model database has been saved to "C:\temp\flap\bistable-flap.cae".
#: Job chkflap: Analysis Input File Processor completed successfully.
#: Error in job chkflap: Too many attempts made for this increment
#: Error in job chkflap: THE ANALYSIS HAS BEEN TERMINATED DUE TO PREVIOUS ERRORS. ALL OUTPUT REQUESTS HAVE BEEN WRITTEN FOR THE LAST CONVERGED INCREMENT.
#: Job chkflap: Abaqus/Standard aborted due to errors.
#: Error in job chkflap: Abaqus/Standard Analysis exited with an error - Please see the  message file for possible error messages if the file exists.
#: Job chkflap aborted due to errors.
o3 = session.openOdb(name='C:/temp/flap/chkflap.odb')
#: Model: C:/temp/flap/chkflap.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       6
#: Number of Node Sets:          7
#: Number of Steps:              4
session.viewports['Viewport: 1'].setValues(displayedObject=o3)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].odbDisplay.display.setValues(plotState=(
    CONTOURS_ON_UNDEF, CONTOURS_ON_DEF, ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.643789, 
    farPlane=1.14246, width=0.562976, height=0.254302, cameraPosition=(0.4726, 
    0.306884, 0.624368), cameraUpVector=(-0.062055, 0.774108, -0.630005), 
    cameraTarget=(0.0597182, 0.0510437, -0.119275))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.684338, 
    farPlane=1.08942, width=0.598435, height=0.270319, cameraPosition=(
    0.102421, 0.479281, 0.658312), cameraUpVector=(0.0237112, 0.664127, 
    -0.747244), cameraTarget=(0.0576845, 0.0519908, -0.119089))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.63874, 
    farPlane=1.14676, width=0.558561, height=0.252307, cameraPosition=(
    0.849494, 0.287653, 0.205292), cameraUpVector=(-0.37401, 0.750815, 
    -0.544421), cameraTarget=(0.0565568, 0.0522801, -0.118405))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.634525, 
    farPlane=1.14395, width=0.554875, height=0.250642, cameraPosition=(
    0.637566, 0.512261, 0.371901), cameraUpVector=(-0.351732, 0.582572, 
    -0.732731), cameraTarget=(0.0554807, 0.0534206, -0.117559))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.643795, 
    farPlane=1.12972, width=0.562981, height=0.254304, cameraPosition=(
    0.689816, 0.598098, 0.182321), cameraUpVector=(-0.526759, 0.462759, 
    -0.713007), cameraTarget=(0.0555407, 0.0535191, -0.117777))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.650676, 
    farPlane=1.13138, width=0.568999, height=0.257022, cameraPosition=(0.38405, 
    0.401305, 0.630226), cameraUpVector=(0.000576317, 0.695563, -0.718465), 
    cameraTarget=(0.0560441, 0.0538431, -0.118514))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.684386, 
    farPlane=1.09465, width=0.598477, height=0.270338, cameraPosition=(
    0.114405, 0.419013, 0.689208), cameraUpVector=(0.183819, 0.695528, 
    -0.694587), cameraTarget=(0.0551934, 0.053899, -0.118328))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.709024, 
    farPlane=1.04464, width=0.620022, height=0.28007, cameraPosition=(
    -0.106426, 0.917397, 0.0168506), cameraUpVector=(0.623531, -0.104316, 
    -0.774808), cameraTarget=(0.0548707, 0.0546272, -0.11931))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.622903, 
    farPlane=1.13798, width=0.544711, height=0.246052, cameraPosition=(
    -0.404582, 0.464366, 0.515433), cameraUpVector=(0.399781, 0.687704, 
    -0.606002), cameraTarget=(0.0587422, 0.0605097, -0.125784))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.677965, 
    farPlane=1.09455, width=0.592861, height=0.267802, cameraPosition=(
    0.149987, -0.278002, 0.685496), cameraUpVector=(0.628383, 0.769833, 
    -0.111768), cameraTarget=(0.053845, 0.0670654, -0.127286))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.727596, 
    farPlane=1.04384, width=0.636262, height=0.287407, cameraPosition=(
    -0.0549189, -0.804065, 0.00113094), cameraUpVector=(0.179295, 0.444643, 
    0.877579), cameraTarget=(0.054298, 0.0682285, -0.125773))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.616787, 
    farPlane=1.14987, width=0.539363, height=0.243637, cameraPosition=(
    -0.577056, -0.26173, -0.653636), cameraUpVector=(0.167645, -0.636188, 
    0.753101), cameraTarget=(0.055771, 0.0666985, -0.123926))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.667753, 
    farPlane=1.10259, width=0.583931, height=0.263769, cameraPosition=(
    -0.105728, -0.321691, -0.905207), cameraUpVector=(0.155363, -0.701752, 
    0.695275), cameraTarget=(0.0531631, 0.0670303, -0.122534))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.684419, 
    farPlane=1.08726, width=0.598505, height=0.270352, cameraPosition=(
    0.089347, -0.470775, -0.828336), cameraUpVector=(0.26659, -0.506479, 
    0.820005), cameraTarget=(0.0524921, 0.0675431, -0.122798))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.674896, 
    farPlane=1.09597, width=0.590177, height=0.26659, cameraPosition=(
    -0.0227044, -0.301861, -0.926961), cameraUpVector=(0.0611361, -0.719154, 
    0.692156), cameraTarget=(0.0527928, 0.0670898, -0.122533))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.634937, 
    farPlane=1.13956, width=0.555236, height=0.250806, cameraPosition=(
    0.588754, -0.465649, -0.587551), cameraUpVector=(-0.252492, -0.446378, 
    0.858484), cameraTarget=(0.0508697, 0.067605, -0.1236))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.673929, 
    farPlane=1.09875, width=0.589334, height=0.266208, cameraPosition=(
    0.165404, -0.31474, -0.916875), cameraUpVector=(-0.437195, -0.648916, 
    0.62271), cameraTarget=(0.0513319, 0.0674402, -0.12324))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.691937, 
    farPlane=1.08087, width=0.605081, height=0.273321, cameraPosition=(
    0.132021, 0.07133, -1.00759), cameraUpVector=(-0.246046, -0.91922, 
    0.307403), cameraTarget=(0.0514026, 0.0666221, -0.123048))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.67868, 
    farPlane=1.09402, width=0.593488, height=0.268084, cameraPosition=(
    0.135544, -0.126516, -0.985876), cameraUpVector=(-0.0606226, -0.847477, 
    0.527359), cameraTarget=(0.0513954, 0.0670277, -0.123093))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.669886, 
    farPlane=1.10202, width=0.585797, height=0.26461, cameraPosition=(
    -0.0659329, -0.270596, -0.936139), cameraUpVector=(-0.148016, -0.715288, 
    0.682975), cameraTarget=(0.0518205, 0.0673317, -0.123198))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.655854, 
    farPlane=1.11544, width=0.573526, height=0.259068, cameraPosition=(
    -0.192638, -0.492511, -0.767799), cameraUpVector=(-0.256801, -0.38064, 
    0.88835), cameraTarget=(0.052145, 0.0679001, -0.123629))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.630198, 
    farPlane=1.1435, width=0.551091, height=0.248934, cameraPosition=(0.563476, 
    -0.308343, -0.743431), cameraUpVector=(-0.276565, -0.691224, 0.667624), 
    cameraTarget=(0.0499485, 0.0673651, -0.1237))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.675103, 
    farPlane=1.09743, width=0.590359, height=0.266672, cameraPosition=(
    -0.0603547, -0.276657, -0.934722), cameraUpVector=(-0.0981786, -0.722266, 
    0.684611), cameraTarget=(0.0509124, 0.0673161, -0.123404))
session.viewports[session.currentViewportName].odbDisplay.setFrame(
    step='Loading', frame=33)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.683085, 
    farPlane=1.0885, width=0.597339, height=0.314578, cameraPosition=(
    -0.266322, -0.74823, 0.0200928), cameraUpVector=(0.0979102, 0.479933, 
    0.871825), cameraTarget=(0.051366, 0.0683546, -0.125507))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.665982, 
    farPlane=1.10596, width=0.582383, height=0.306702, cameraPosition=(
    -0.0317875, -0.535875, -0.769668), cameraUpVector=(-0.228549, -0.41911, 
    0.878699), cameraTarget=(0.0507232, 0.0677726, -0.123342))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.655454, 
    farPlane=1.11639, width=0.573176, height=0.301853, cameraPosition=(
    -0.115292, -0.529303, -0.759626), cameraUpVector=(-0.0707314, -0.438952, 
    0.895722), cameraTarget=(0.0509352, 0.0677559, -0.123367))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.661408, 
    farPlane=1.11047, width=0.578383, height=0.304595, cameraPosition=(
    -0.0486648, -0.354762, -0.898192), cameraUpVector=(-0.0835832, -0.656201, 
    0.749942), cameraTarget=(0.0507623, 0.067303, -0.123007))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.616209, 
    farPlane=1.15477, width=0.538858, height=0.28378, cameraPosition=(
    -0.695323, 0.21919, -0.578017), cameraUpVector=(-0.106646, -0.830241, 
    0.547107), cameraTarget=(0.0524279, 0.0658247, -0.123832))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.720465, 
    farPlane=1.05039, width=0.630027, height=0.331793, cameraPosition=(
    -0.144077, 0.929737, -0.154304), cameraUpVector=(-0.841466, -0.533902, 
    -0.0829665), cameraTarget=(0.0507275, 0.063633, -0.125139))
session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=2, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=34 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=1, frame=0 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=27 )
session.viewports['Viewport: 1'].odbDisplay.setFrame(step=0, frame=0 )
session.viewports[session.currentViewportName].odbDisplay.setFrame(
    step='Loading', frame=33)
session.viewports[session.currentViewportName].odbDisplay.setFrame(
    step='Loading', frame=33)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.631954, 
    farPlane=1.15187, width=0.474267, height=0.249765, cameraPosition=(
    0.762471, 0.435675, 0.264662), cameraUpVector=(-0.53939, 0.692929, 
    -0.478442), cameraTarget=(0.0597259, 0.0509125, -0.119302))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.634202, 
    farPlane=1.14927, width=0.475954, height=0.250653, cameraPosition=(
    0.572174, 0.42548, 0.502614), cameraUpVector=(-0.242438, 0.683285, 
    -0.688727), cameraTarget=(0.0589846, 0.0508728, -0.118375))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.6494, 
    farPlane=1.11975, width=0.48736, height=0.25666, cameraPosition=(0.49591, 
    0.71515, 0.278702), cameraUpVector=(-0.359587, 0.31705, -0.877597), 
    cameraTarget=(0.0587025, 0.0519443, -0.119203))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.648068, 
    farPlane=1.12108, width=0.48636, height=0.256133, cameraPosition=(0.49591, 
    0.71515, 0.278702), cameraUpVector=(-0.74362, 0.375562, -0.553157), 
    cameraTarget=(0.0587025, 0.0519443, -0.119203))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.632928, 
    farPlane=1.14519, width=0.474998, height=0.250149, cameraPosition=(
    0.580853, 0.535781, 0.412146), cameraUpVector=(-0.557373, 0.610032, 
    -0.563201), cameraTarget=(0.0583315, 0.0527276, -0.119786))
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.615711, 
    farPlane=1.16241, width=0.669804, height=0.352741, viewOffsetX=0.0487076, 
    viewOffsetY=0.0214035)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.613297, 
    farPlane=1.06994, width=0.667177, height=0.351357, cameraPosition=(
    0.184317, 0.0543363, 0.706234), cameraUpVector=(-0.174312, 0.929842, 
    -0.32405), cameraTarget=(0.0314203, 0.0392086, -0.168817), 
    viewOffsetX=0.0485166, viewOffsetY=0.0213195)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.60586, 
    farPlane=1.08455, width=0.659087, height=0.347097, cameraPosition=(
    0.152468, 0.408247, 0.641402), cameraUpVector=(0.0583248, 0.708261, 
    -0.703538), cameraTarget=(0.0254619, 0.0425222, -0.158245), 
    viewOffsetX=0.0479283, viewOffsetY=0.021061)
session.viewports['Viewport: 1'].view.setValues(nearPlane=0.615553, 
    farPlane=1.06152, width=0.669632, height=0.35265, cameraPosition=(
    0.0725958, 0.297974, 0.68088), cameraUpVector=(0.0395623, 0.802904, 
    -0.594794), cameraTarget=(0.0302321, 0.0399076, -0.168194), 
    viewOffsetX=0.0486951, viewOffsetY=0.021398)
